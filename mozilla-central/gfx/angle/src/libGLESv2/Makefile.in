# 
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DEPTH     = @DEPTH@
topsrcdir = @top_srcdir@
srcdir    = @srcdir@
VPATH     = @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE = libglesv2
# On Windows, we don't automatically get "lib" prepended, but we need it.
LIBRARY_NAME = libGLESv2
MODULE_NAME = libglesv2
FORCE_SHARED_LIB=1

# ANGLE uses the STL, so we can't use our derpy STL wrappers.
STL_FLAGS=

# ANGLE uses exceptions internally, so we need to have exception handling
# support
ENABLE_CXX_EXCEPTIONS=1

# Since we're building off in our own world, we don't want to have
# mozilla-config.h and -DMOZILLA_CLIENT automatically included and defined, so
# we just overwrite OS_COMPILE_C(XX)FLAGS.
OS_COMPILE_CFLAGS = $(OS_CPPFLAGS)
OS_COMPILE_CXXFLAGS = $(OS_CPPFLAGS)

LOCAL_INCLUDES = \
 -I$(srcdir)/../../include \
 -I$(srcdir)/.. \
 -I"$(MOZ_DIRECTX_SDK_PATH)/include" \


VPATH += $(srcdir)/..
VPATH += $(srcdir)/../compiler
VPATH += $(srcdir)/../compiler/preprocessor
VPATH += $(srcdir)/../compiler/preprocessor/new
VPATH += $(srcdir)/../compiler/timing
VPATH += $(srcdir)/../compiler/depgraph
VPATH += $(srcdir)/../common

# Translator/compiler first

CPPSRCS = \
        Diagnostics.cpp \
        PreprocessorDiagnostics.cpp \
        DirectiveHandler.cpp \
        PreprocessorDirectiveHandler.cpp \
        DirectiveParser.cpp \
        ExpressionParser.cpp \
        Macro.cpp \
        MacroExpander.cpp \
        Tokenizer.cpp \
        InitializeParseContext.cpp \
        DependencyGraph.cpp \
        DependencyGraphBuilder.cpp \
        DependencyGraphOutput.cpp \
        DependencyGraphTraverse.cpp \
        RestrictFragmentShaderTiming.cpp \
        RestrictVertexShaderTiming.cpp \
        Compiler.cpp \
        DetectRecursion.cpp \
        InfoSink.cpp \
        Initialize.cpp \
        InitializeDll.cpp \
        Intermediate.cpp \
        intermOut.cpp \
        IntermTraverse.cpp \
        parseConst.cpp \
        ParseHelper.cpp \
        PoolAlloc.cpp \
        QualifierAlive.cpp \
        RemoveTree.cpp \
        ShaderLang.cpp \
        SymbolTable.cpp \
        VariableInfo.cpp \
        compilerdebug.cpp \
        util.cpp \
        ValidateLimitations.cpp \
        ForLoopUnroll.cpp \
        MapLongVariableNames.cpp \
        spooky.cpp \
        BuiltInFunctionEmulator.cpp \
        Input.cpp \
        Lexer.cpp \
        Preprocessor.cpp \
        Token.cpp \
        VariablePacker.cpp \
        $(NULL)

# flex/yacc generated files
CPPSRCS += \
        glslang_lex.cpp \
        glslang_tab.cpp \
        $(NULL)

# HLSL translator backend
CPPSRCS += \
        CodeGenHLSL.cpp \
        OutputHLSL.cpp \
        TranslatorHLSL.cpp \
        SearchSymbol.cpp \
        OutputESSL.cpp \
        OutputGLSLBase.cpp \
        TranslatorESSL.cpp \
        DetectDiscontinuity.cpp \
        UnfoldShortCircuit.cpp \
        $(NULL)

ifeq ($(MOZ_WIDGET_TOOLKIT),windows)
CPPSRCS += ossource_win.cpp $(NULL)
else
CPPSRCS += ossource_posix.cpp $(NULL)
endif

CSRCS = \
        atom.c \
        cpp.c \
        cppstruct.c \
        memory.c \
        scanner.c \
        symbols.c \
        tokens.c \
        $(NULL)

DEFINES += -DANGLE_BUILD -DNOMINMAX -DLIBGLESV2_EXPORTS -D_CRT_SECURE_NO_DEPRECATE

#these defines are from ANGLE's build_angle.gyp
DEFINES += -DANGLE_DISABLE_TRACE
DEFINES += -DANGLE_COMPILE_OPTIMIZATION_LEVEL=D3DCOMPILE_OPTIMIZATION_LEVEL0

ifndef MOZ_DEBUG
DEFINES += -D_SECURE_SCL=0
endif

CPPSRCS += \
        debug.cpp \
        Blit.cpp \
        Buffer.cpp \
        Context.cpp \
        Fence.cpp \
        Framebuffer.cpp \
        libGLESv2.cpp \
        main.cpp \
        Program.cpp \
        ProgramBinary.cpp \
        RefCountObject.cpp \
        Query.cpp \
        Renderbuffer.cpp \
        ResourceManager.cpp \
        Shader.cpp \
        Texture.cpp \
        TextureSSE2.cpp \
        utilities.cpp \
        HandleAllocator.cpp \
        IndexDataManager.cpp \
        VertexDataManager.cpp \
        $(NULL)

DEFFILE = $(srcdir)/libGLESv2.def
RCFILE = $(srcdir)/libGLESv2.rc

include $(topsrcdir)/config/rules.mk

ifdef GNU_CC

TextureSSE2.$(OBJ_SUFFIX): CXXFLAGS+=-msse2

OS_CXXFLAGS := $(filter-out -fno-exceptions,$(OS_CXXFLAGS)) -fexceptions
OS_LIBS += -ld3d9
ifdef MOZ_D3DX9_VERSION
OS_LIBS += -ld3dx9_$(MOZ_D3DX9_VERSION) -ld3dcompiler_$(MOZ_D3DX9_VERSION)
else
OS_LIBS += -ld3dx9 -ld3dcompiler
endif

else

EXTRA_DSO_LDOPTS = "$(MOZ_DIRECTX_SDK_PATH)/lib/$(MOZ_DIRECTX_SDK_CPU_SUFFIX)/d3d9.lib" \
                   "$(MOZ_DIRECTX_SDK_PATH)/lib/$(MOZ_DIRECTX_SDK_CPU_SUFFIX)/d3dx9.lib" \
                   "$(MOZ_DIRECTX_SDK_PATH)/lib/$(MOZ_DIRECTX_SDK_CPU_SUFFIX)/D3DCompiler.lib"

endif

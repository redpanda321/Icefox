/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

interface nsIURI;
interface nsIDOMNode;
interface nsISimpleEnumerator;

[scriptable, uuid(cba513eb-c457-4b93-832c-1a979e66edd1)]
interface nsIPrefetchService : nsISupports
{
    /**
     * Enqueue a request to prefetch the specified URI.
     *
     * @param aURI the URI of the document to prefetch
     * @param aReferrerURI the URI of the referring page
     * @param aSource the DOM node (such as a <link> tag) that requested this
     *        fetch, or null if the prefetch was not requested by a DOM node.
     * @param aExplicit the link element has an explicit prefetch link type
     */
    void prefetchURI(in nsIURI aURI,
                     in nsIURI aReferrerURI,
                     in nsIDOMNode aSource,
                     in boolean aExplicit);

    /**
     * @status DEPRECATED This method is no longer used, and will throw
     * NS_ERROR_NOT_IMPLEMENTED.
     */
    void prefetchURIForOfflineUse(in nsIURI aURI,
                                  in nsIURI aReferrerURI,
                                  in nsIDOMNode aSource,
                                  in boolean aExplicit);

    /**
     * Enumerate the items in the prefetch queue.  Each element in the
     * enumeration is an nsIDOMLoadStatus.
     *
     * @param aIncludeNormalItems include normal prefetch items in the
     *        list.  This parameter is deprecated and must be TRUE,
     *        or NS_ERROR_INT_IMPLEMENTED will be thrown.
     * @param aIncludeOfflineItems include items being fetched for offline
     *        use.  This parameter is deprecated and must be FALSE,
     *        or NS_ERROR_NOT_IMPLEMENTED will be thrown.
     */
    nsISimpleEnumerator enumerateQueue(in boolean aIncludeNormalItems,
                                       in boolean aIncludeOfflineItems);

    // XXX do we need a way to cancel prefetch requests?
};

/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */


#include "nsISupports.idl"

interface nsIURI;
interface nsIFile;
interface nsIInterfaceRequestor;
interface nsIArray;

[scriptable, uuid(871cf229-2b21-4f04-b24d-e08061f14815)]
interface nsIParentalControlsService : nsISupports
{
  /**
   * @returns true if the current user account has parental controls
   * restrictions enabled.
   */ 
  readonly attribute boolean parentalControlsEnabled;

  /**
   * @returns true if the current user account parental controls
   * restrictions include the blocking of all file downloads.
   */ 
  readonly attribute boolean blockFileDownloadsEnabled;

  /**
   * Request that blocked URI(s) be allowed through parental
   * control filters. Returns true if the URI was successfully
   * overriden. Note, may block while native UI is shown.
   *
   * @param aTarget(s)          URI to be overridden. In the case of
   *                            multiple URI, the first URI in the array
   *                            should be the root URI of the site.
   * @param window              Window that generates the event.
   */
  boolean requestURIOverride(in nsIURI aTarget, [optional] in nsIInterfaceRequestor aWindowContext);
  boolean requestURIOverrides(in nsIArray aTargets, [optional] in nsIInterfaceRequestor aWindowContext);

  /**
   * @returns true if the current user account has parental controls
   * logging enabled. If true, applications should log relevent events
   * using 'log'.
   */ 
  readonly attribute boolean loggingEnabled;

  /**
   * Log entry types. Additional types can be defined and implemented
   * as needed. Other possible event types might include email events,
   * media related events, and IM events. 
   */
  const short ePCLog_URIVisit = 1;    /* Web content */
  const short ePCLog_FileDownload = 2;  /* File downloads */

  /**
   * Log an application specific parental controls
   * event.
   *
   * @param aEntryType       Constant defining the type of event.
   * @param aFlag            A flag indicating if the subject content
   *                         was blocked.
   * @param aSource          The URI source of the subject content.
   * @param aTarget          The location the content was saved to if
   *                         no blocking occurred.
   */
  void log(in short aEntryType, in boolean aFlag, in nsIURI aSource, [optional] in nsIFile aTarget);
};

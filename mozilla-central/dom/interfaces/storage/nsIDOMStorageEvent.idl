/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "domstubs.idl"
#include "nsIDOMEvent.idl"

/**
 * Interface for a client side storage. See
 * http://dev.w3.org/html5/webstorage/#the-storage-event
 * for more information.
 *
 * Event sent to a window when a storage area changes.
 */

interface nsIDOMStorage;

[scriptable, builtinclass, uuid(85f04275-4679-4e89-b43f-142bbbab1e89)]
interface nsIDOMStorageEvent : nsIDOMEvent
{
  /**
   * Attribute represents the key being changed. The key attribute is null
   * when change has been invoked by the storage clear() method.
   */
  readonly attribute DOMString key;

  /**
   * The original value of the key. The oldValue is null when the change
   * has been invoked by storage clear() method or the key has been newly
   * added and therefor doesn't have any previous value.
   */
  readonly attribute DOMString oldValue;

  /**
   * The new value of the key. The newValue is null when the change
   * has been invoked by storage clear() method or the key has been removed
   * from the storage.
   */
  readonly attribute DOMString newValue;

  /**
   * Represents the address of the document whose key changed.
   */
  readonly attribute DOMString url;

  /**
   * Represents the Storage object that was affected.
   */
  readonly attribute nsIDOMStorage storageArea;

  /**
   * Initialize the event in a manner analogous to the similarly-named method
   * in the DOM Events interfaces.
   */
  void initStorageEvent(in DOMString typeArg, 
                        in boolean canBubbleArg, 
                        in boolean cancelableArg, 
                        in DOMString keyArg,
                        in DOMString oldValueArg,
                        in DOMString newValueArg,
                        in DOMString urlArg,
                        in nsIDOMStorage storageAreaArg);
};

dictionary StorageEventInit : EventInit
{
  DOMString? key;
  DOMString? oldValue;
  DOMString? newValue;
  DOMString url;
  nsIDOMStorage storageArea;
};

<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"
                 type="text/css"?>
<!--
https://bugzilla.mozilla.org/show_bug.cgi?id=549682
-->
<window title="Mozilla Bug 549682"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  onload="run()">
  <label value="Mozilla Bug 549682"/>
  <!-- test code goes here -->
  <script type="application/javascript"><![CDATA[
  var didRunAsync = false;
  var didRunLocal = false;
  var global = Components.classes["@mozilla.org/globalmessagemanager;1"].getService(Components.interfaces.nsIChromeFrameMessageManager);
  var ppm = Components.classes["@mozilla.org/parentprocessmessagemanager;1"].getService(Components.interfaces.nsIFrameMessageManager);
  var cpm = Components.classes["@mozilla.org/childprocessmessagemanager;1"].getService(Components.interfaces.nsISyncMessageSender);

  var asyncPPML = false;
  function ppmASL(m) {
    asyncPPML = true;
  }
  var syncPPML = false;
  function ppmSL(m) {
    syncPPML = true;
  }
  ppm.addMessageListener("processmessageAsync", ppmASL);
  ppm.addMessageListener("processmessageSync", ppmSL);

  cpm.sendAsyncMessage("processmessageAsync", "");
  cpm.sendSyncMessage("processmessageSync", "");

  var asyncCPML = false;
  function cpmASL(m) {
    asyncCPML = true;
  }
  cpm.addMessageListener("childprocessmessage", cpmASL);
  ppm.sendAsyncMessage("childprocessmessage", "");
  
  function checkPMMMessages() {
    opener.wrappedJSObject.ok(asyncPPML, "should have handled async message");
    opener.wrappedJSObject.ok(syncPPML, "should have handled sync message");
    opener.wrappedJSObject.ok(asyncCPML, "should have handled async message");
    ppm.removeMessageListener("processmessageAsync", ppmASL);
    ppm.removeMessageListener("processmessageSync", ppmSL);
    cpm.removeMessageListener("childprocessmessage", cpmASL);
  }

  var globalListenerCallCount = 0;
  function globalListener(m) {
    ++globalListenerCallCount;
    if (m.name == "sync") {
      global.removeMessageListener("async", globalListener);
      global.removeMessageListener("sync", globalListener);
      global.removeMessageListener("global-sync", globalListener);
      // Note, the result depends on what other windows are open.
      opener.wrappedJSObject.ok(globalListenerCallCount >= 4,
                                "Global listener should have been called at least 4 times!");
      opener.wrappedJSObject.ok(didRunLocal, "Local message received.");

      opener.setTimeout("done()", 0);
      var i = document.getElementById("ifr");
      i.parentNode.removeChild(i); // This is a crash test!
      window.close();
    }
  }

  function asyncL(m) {
    didRunAsync = true;
    opener.wrappedJSObject.is(m.name, "async", "Wrong message!");
    opener.wrappedJSObject.is(m.json.data, 1234, "Wrong data!");
  }

  function syncL(m) {
    opener.wrappedJSObject.is(m.name, "sync", "Wrong message!");
    opener.wrappedJSObject.is(m.json.data, 1234, "Wrong data!");
    opener.wrappedJSObject.ok(didRunAsync, "Should have run async!");
  }

  function localL(m) {
    opener.wrappedJSObject.is(m.name, "lasync", "Wrong message!");
    opener.wrappedJSObject.is(m.json.data, 2345, "Wrong data!");
    didRunLocal = true;
  }

  function loadScript() {
    // Async should be processed first!
    messageManager.loadFrameScript("data:,sendAsyncMessage('async', { data: 1234 }); sendSyncMessage('sync', { data: 1234 });", false);
  }

  function run() {
    var localmm = document.getElementById('ifr').messageManager;

    var wn = document.getElementById('ifr').contentWindow
      .getInterface(Components.interfaces.nsIWebNavigation);
    opener.wrappedJSObject.ok(wn, "Should have webnavigation");
    var cfmm = wn.getInterface(Components.interfaces.nsIContentFrameMessageManager);
    opener.wrappedJSObject.ok(cfmm, "Should have content messageManager");

    var didGetSyncMessage = false;
    function syncContinueTestFn() {
      didGetSyncMessage = true;
    }
    localmm.addMessageListener("syncContinueTest", syncContinueTestFn);
    cfmm.sendSyncMessage("syncContinueTest", {});
    localmm.removeMessageListener("syncContinueTest", syncContinueTestFn);
    opener.wrappedJSObject.ok(didGetSyncMessage, "Should have got sync message!");
    
    localmm.addMessageListener("lasync", localL);
    localmm.loadFrameScript("data:,sendAsyncMessage('lasync', { data: 2345 })", false);

    messageManager.addMessageListener("async", asyncL);
    messageManager.addMessageListener("sync", syncL);
    global.addMessageListener("async", globalListener);
    global.addMessageListener("sync", globalListener);
    global.addMessageListener("global-sync", globalListener);
    global.loadFrameScript("data:,sendSyncMessage('global-sync', { data: 1234 });", true);
    var toBeRemovedScript = "data:,sendAsyncMessage('toberemoved', { data: 2345 })";
    var c = 0;
    messageManager.addMessageListener("toberemoved", function() {
      ++c;
      opener.wrappedJSObject.is(c, 1, "Should be called only once!");
    });
    // This loads the script in the existing <browser>
    messageManager.loadFrameScript(toBeRemovedScript, true);
    // But it won't be loaded in the dynamically created <browser>
    messageManager.removeDelayedFrameScript(toBeRemovedScript);

    var oldValue = globalListenerCallCount;
    var b = document.createElement("browser");
    b.setAttribute("type", "content");
    document.documentElement.appendChild(b);
    opener.wrappedJSObject.is(globalListenerCallCount, oldValue + 1,
                              "Wrong message count");

    setTimeout(checkPMMMessages, 0);
    setTimeout(loadScript, 0);
  }

  ]]></script>
  <browser type="content" src="about:blank" id="ifr"/>
</window>

/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"
#include "nsIConsoleListener.idl"
#include "nsIConsoleMessage.idl"

[scriptable, uuid(883472a0-ea9b-11da-8ad9-0800200c9a66)]
interface nsIConsoleService : nsISupports
{
    void logMessage(in nsIConsoleMessage message);

    /**
     * Convenience method for logging simple messages.
     */
    void logStringMessage(in wstring message);

    /**
     * Get an array of all the messages logged so far.  If no messages
     * are logged, this function will return a count of 0, but still
     * will allocate one word for messages, so as to show up as a
     * 0-length array when called from script.
     */
    void getMessageArray([array, size_is(count)] out nsIConsoleMessage messages,
                         out PRUint32 count);

    /**
     * To guard against stack overflows from listeners that could log
     * messages (it's easy to do this inadvertently from listeners
     * implemented in JavaScript), we don't call any listeners when
     * another error is already being logged.
     */
    void registerListener(in nsIConsoleListener listener);

    /**
     * Each registered listener should also be unregistered.
     */
    void unregisterListener(in nsIConsoleListener listener);

    /**
     * Clear the message buffer (e.g. for privacy reasons).
     */
    void reset();
};


%{ C++
#define NS_CONSOLESERVICE_CLASSNAME "Console Service"

#define NS_CONSOLESERVICE_CID \
{ 0x7e3ff85c, 0x1dd2, 0x11b2, { 0x8d, 0x4b, 0xeb, 0x45, 0x2c, 0xb0, 0xff, 0x40 }}

#define NS_CONSOLESERVICE_CONTRACTID "@mozilla.org/consoleservice;1"
%}


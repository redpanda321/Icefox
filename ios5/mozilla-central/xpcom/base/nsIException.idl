/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

/*
 * Interfaces for representing cross-language exceptions and stack traces.
 */


#include "nsISupports.idl"
#include "nsIProgrammingLanguage.idl"

// XXX - most "string"s in this file should probably move to Unicode
//       so may as well use AStrings...


[scriptable, uuid(91d82105-7c62-4f8b-9779-154277c0ee90)]
interface nsIStackFrame : nsISupports
{
    // see nsIProgrammingLanguage for list of language consts
    readonly attribute PRUint32                language;
    readonly attribute string                  languageName;
    readonly attribute string                  filename;
    readonly attribute string                  name;
    // Valid line numbers begin at '1'. '0' indicates unknown.
    readonly attribute PRInt32                 lineNumber;
    readonly attribute string                  sourceLine;
    readonly attribute nsIStackFrame           caller;

    string toString();
};

[scriptable, uuid(F3A8D3B4-C424-4edc-8BF6-8974C983BA78)]
interface nsIException : nsISupports
{
    // A custom message set by the thrower.
    [binaryname(MessageMoz)] readonly attribute string message;
    // The nsresult associated with this exception.
    readonly attribute nsresult                result;
    // The name of the error code (ie, a string repr of |result|)
    readonly attribute string                  name;

    // Filename location.  This is the location that caused the
    // error, which may or may not be a source file location.
    // For example, standard language errors would generally have
    // the same location as their top stack entry.  File
    // parsers may put the location of the file they were parsing,
    // etc.

    // null indicates "no data"
    readonly attribute string                  filename;
    // Valid line numbers begin at '1'. '0' indicates unknown.
    readonly attribute PRUint32                lineNumber;
    // Valid column numbers begin at 0. 
    // We don't have an unambiguous indicator for unknown.
    readonly attribute PRUint32                columnNumber;

    // A stack trace, if available.
    readonly attribute nsIStackFrame           location;
    // An inner exception that triggered this, if available.
    readonly attribute nsIException            inner;

    // Arbitary data for the implementation.
    readonly attribute nsISupports             data;

    // A generic formatter - make it suitable to print, etc.
    string toString();
};

/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsIProxiedProtocolHandler.idl"

[scriptable, uuid(9814fdf0-5ac3-11e0-80e3-0800200c9a66)]
interface nsIHttpProtocolHandler : nsIProxiedProtocolHandler
{
    /**
     * Get the HTTP advertised user agent string.
     */
    readonly attribute ACString userAgent;

    /**
     * Get the application name.
	 *
     * @return The name of this application (eg. "Mozilla").
     */
    readonly attribute ACString appName;

    /**
     * Get the application version string.
     *
     * @return The complete version (major and minor) string. (eg. "5.0")
     */
    readonly attribute ACString appVersion;

    /**
     * @return The product name.
     */
    readonly attribute ACString product;

    /**
     * @return A product sub string.
     */
    readonly attribute ACString productSub;

    /**
     * Get the current platform.
     *
     * @return The platform this application is running on
     *		   (eg. "Windows", "Macintosh", "X11")
     */
    readonly attribute ACString platform;

    /**
     * Get the current oscpu.
     *
     * @return The oscpu this application is running on
     */
    readonly attribute ACString oscpu;

    /**
     * Get the application comment misc portion.
     */
    readonly attribute ACString misc;

};

%{C++
// ----------- Categories ----------- 
/**
 * At initialization time, the HTTP handler will initialize each service
 * registered under this category:
 */
#define NS_HTTP_STARTUP_CATEGORY "http-startup-category"

// ----------- Observer topics ----------- 
/**
 * nsIObserver notification corresponding to startup category.  Services
 * registered under the startup category will receive this observer topic at
 * startup if they implement nsIObserver.  The "subject" of the notification
 * is the nsIHttpProtocolHandler instance.
 */
#define NS_HTTP_STARTUP_TOPIC "http-startup"

/**
 * Before an HTTP request is sent to the server, this observer topic is
 * notified.  The observer of this topic can then choose to set any additional
 * headers for this request before the request is actually sent to the server.
 * The "subject" of the notification is the nsIHttpChannel instance.
 */
#define NS_HTTP_ON_MODIFY_REQUEST_TOPIC "http-on-modify-request"

/**
 * After an HTTP server response is received, this observer topic is notified.
 * The observer of this topic can interrogate the response.  The "subject" of
 * the notification is the nsIHttpChannel instance.
 */
#define NS_HTTP_ON_EXAMINE_RESPONSE_TOPIC "http-on-examine-response"

/**
 * The observer of this topic is notified after the received HTTP response
 * is merged with data from the browser cache.  This means that, among other
 * things, the Content-Type header will be set correctly.
 */
#define NS_HTTP_ON_EXAMINE_MERGED_RESPONSE_TOPIC "http-on-examine-merged-response"

/**
 * The observer of this topic is notified before data is read from the cache.
 * The notification is sent if and only if there is no network communication
 * at all.
 */
#define NS_HTTP_ON_EXAMINE_CACHED_RESPONSE_TOPIC "http-on-examine-cached-response"


%}

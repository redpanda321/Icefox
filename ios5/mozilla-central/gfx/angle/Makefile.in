# 
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DEPTH		= ../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= angle
LIBRARY_NAME	= angle
LIBXUL_LIBRARY  = 1
ifeq (WINNT,$(OS_TARGET))
VISIBILITY_FLAGS =
endif

EXPORTS_NAMESPACES = angle

EXPORTS_angle = \
	include/GLSLANG/ShaderLang.h \
	$(NULL)

LOCAL_INCLUDES += -I$(srcdir)/include -I$(srcdir)/src

VPATH += $(srcdir)/src
VPATH += $(srcdir)/src/compiler
VPATH += $(srcdir)/src/compiler/preprocessor
VPATH += $(srcdir)/src/compiler/preprocessor/new

CPPSRCS = \
	Compiler.cpp \
        DetectRecursion.cpp \
        InfoSink.cpp \
        Initialize.cpp \
        InitializeDll.cpp \
        Intermediate.cpp \
        intermOut.cpp \
        IntermTraverse.cpp \
        parseConst.cpp \
        ParseHelper.cpp \
        PoolAlloc.cpp \
        QualifierAlive.cpp \
        RemoveTree.cpp \
        ShaderLang.cpp \
        SymbolTable.cpp \
        VariableInfo.cpp \
        compilerdebug.cpp \
        ossource_nspr.cpp \
        util.cpp \
        ValidateLimitations.cpp \
        ForLoopUnroll.cpp \
        MapLongVariableNames.cpp \
        spooky.cpp \
        BuiltInFunctionEmulator.cpp \
        Input.cpp \
        Lexer.cpp \
        pp_lex.cpp \
        Preprocessor.cpp \
        Token.cpp \
        lexer_glue.cpp \
        $(NULL)

# flex/yacc generated files
CPPSRCS += \
        glslang_lex.cpp \
        glslang_tab.cpp \
        $(NULL)

# GLSL translator backend
CPPSRCS += \
        CodeGenGLSL.cpp \
        OutputGLSL.cpp \
        TranslatorGLSL.cpp \
        VersionGLSL.cpp \
        OutputESSL.cpp \
        OutputGLSLBase.cpp \
        TranslatorESSL.cpp \
	$(NULL)

# Currently, only one or the other
# can be selected.

## HLSL translator backend
##CPPSRCS += \
##	CodeGenHLSL.cpp \
##	OutputHLSL.cpp \
##	TranslatorHLSL.cpp \
##	UnfoldSelect.cpp \
##	SearchSymbol.cpp \
##	$(NULL)

CSRCS   = \
        atom.c \
        cpp.c \
        cppstruct.c \
        memory.c \
        scanner.c \
        symbols.c \
        tokens.c \
	$(NULL)

DEFINES += -DANGLE_USE_NSPR -DANGLE_BUILD -DCOMPILER_IMPLEMENTATION

#these defines are from ANGLE's build_angle.gyp
DEFINES += -DANGLE_DISABLE_TRACE
DEFINES += -DANGLE_COMPILE_OPTIMIZATION_LEVEL=D3DCOMPILE_OPTIMIZATION_LEVEL0

ifdef MOZ_ANGLE_RENDERER

# libEGL depends on (links against!) libGLESv2!
DIRS = src/libGLESv2 src/libEGL

libs::
	expand "$(MOZ_D3DX9_CAB)" -F:$(MOZ_D3DX9_DLL) "$(DIST)/bin"
	expand "$(MOZ_D3DCOMPILER_CAB)" -F:$(MOZ_D3DCOMPILER_DLL) "$(DIST)/bin"

endif

include $(topsrcdir)/config/rules.mk

# We have to filter out -pedantic, because of
# comma-at-end-of-enumerator list failures.  We can try to get this fixed
# upstream at some point.
CXXFLAGS := $(filter-out -pedantic,$(CXXFLAGS))
CFLAGS := $(filter-out -pedantic,$(CFLAGS))

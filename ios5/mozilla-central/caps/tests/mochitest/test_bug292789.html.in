<!DOCTYPE HTML>
<html>
<!--
https://bugzilla.mozilla.org/show_bug.cgi?id=292789
-->
<head>
  <title>Test for Bug 292789</title>
  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
</head>
<body>
<a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=292789">Mozilla Bug 292789</a>
<p id="display"></p>
<div id="content" style="display: none">
  <script src="chrome://global/content/strres.js"></script>
  <script src="chrome://mozapps/content/xpinstall/xpinstallConfirm.js"></script>
</div>
<pre id="test">
<script class="testbody" type="text/javascript">

/** Test for Bug 292789
 **
 ** Selectively allow access to whitelisted chrome packages
 ** even for ALLOW_CHROME mechanisms (<script>, <img> etc)
 **/

SimpleTest.waitForExplicitFinish();

/** <script src=""> test **/
function testScriptSrc(aCallback) {
    is(typeof srGetStrBundle, "function",
       "content can still load <script> from chrome://global");
    is(typeof XPInstallConfirm, "undefined",
       "content should not be able to load <script> from chrome://mozapps");
    
    /** make sure the last one didn't pass because someone
     ** moved the resource
     **/
    var resjs = document.createElement("script");
#ifdef MOZ_CHROME_FILE_FORMAT_JAR
    resjs.src = "jar:resource://gre/chrome/toolkit.jar!/content/mozapps/xpinstall/xpinstallConfirm.js";
#else
    resjs.src = "resource://gre/chrome/toolkit/content/mozapps/xpinstall/xpinstallConfirm.js";
#endif
    resjs.onload = scriptOnload;
    document.getElementById("content").appendChild(resjs);

    function scriptOnload() {
      is(typeof XPInstallConfirm, "object",
         "xpinstallConfirm.js has not moved unexpectedly");
  
      // trigger the callback
      if (aCallback)
        aCallback();
    }
}

/** <img src=""> tests **/
var img_global = "chrome://global/skin/icons/Error.png";
var img_mozapps = "chrome://mozapps/skin/passwordmgr/key.png";
#ifdef MOZ_CHROME_FILE_FORMAT_JAR
var res_mozapps = "jar:resource://gre/chrome/toolkit.jar!/skin/classic/mozapps/passwordmgr/key.png";
#else
var res_mozapps = "resource://gre/chrome/toolkit/skin/classic/mozapps/passwordmgr/key.png";
#endif

var imgTests = [[img_global, "success"],
                [img_mozapps, "fail"],
                [res_mozapps, "success"]];

var curImgTest = 0;

function runImgTest() {
    var test = imgTests[curImgTest++];
    var callback = curImgTest == imgTests.length ? finishTest : runImgTest;
    loadImage(test[0], test[1], callback);
}

function finishTest() {
  SimpleTest.finish();
}

function fail(event) {
    is(event.target.expected, "fail",
       "content should not be allowed to load "+event.target.src);
    if (event.target.callback)
      event.target.callback();
}

function success(event) {
    is(event.target.expected, "success",
       "content should be able to load "+event.target.src);
    if (event.target.callback)
      event.target.callback();
}

function loadImage(uri, expect, callback) {
    var img = document.createElement("img");
    img.onerror = fail;
    img.onload = success;
    img.expected = expect;
    img.callback = callback;
    img.src = uri;
    //document.getElementById("content").appendChild(img);
}

// Start off the script src test, and have it start the img tests when complete.
testScriptSrc(runImgTest);
</script>
</pre>
</body>
</html>

#! /bin/sh
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# mozconfig2client-mk - Translates .mozconfig into options for client.mk.
#    Prints defines to stdout.
#
# See mozconfig2configure for more details

print_header() {
  _mozconfig=${MOZCONFIG:-$HOME/.mozconfig}
  cat <<EOF
# gmake
# This file is automatically generated for client.mk.
# Do not edit. Edit $_mozconfig instead.

EOF
}

ac_add_options() {
  echo "# $* is used by configure (not client.mk)"
}

ac_add_app_options() {
  echo "# $* is used by configure (not client.mk)"
}

mk_add_options() {
  for _opt
  do
    # Escape shell characters, space, tab, dollar, quote, backslash,
    # and substitute '@<word>@' with '$(<word>)'.
    _opt=`echo "$_opt" | sed -e 's/\([\"\\]\)/\\\1/g; s/@\([^@]*\)@/\$(\1)/g;'`
    echo $_opt;
    opts="${opts:+$opts^}$_opt";
  done
}

mk_echo_options() {
  echo "Adding client.mk options from $FOUND_MOZCONFIG:" >&2
  IFS=^
  for _opt in $opts; do
    echo "    $_opt" >&2
  done
}

# Main
#--------------------------------------------------

scriptdir=`dirname $0`
topsrcdir=$1
opts=""

print_header

# If the path changes, configure should be rerun
echo "# PATH=$PATH"

# If FOUND_MOZCONFIG isn't set, look for it and make sure the script doesn't error out
isfoundset=${FOUND_MOZCONFIG+yes}
if [ -z $isfoundset ]; then
  FOUND_MOZCONFIG=`$scriptdir/mozconfig-find $topsrcdir`
  if [ $? -ne 0 ]; then
    echo '$(error Fix above errors before continuing.)'
  else
    isfoundset=yes
  fi
fi

if [ -n $isfoundset ]; then
  if [ "$FOUND_MOZCONFIG" ]
  then
    . "$FOUND_MOZCONFIG"
  fi
  echo "export FOUND_MOZCONFIG := $FOUND_MOZCONFIG"

  if [ "$opts" ]; then
    mk_echo_options
  fi
fi

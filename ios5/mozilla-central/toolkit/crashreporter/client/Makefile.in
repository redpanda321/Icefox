# vim:set ts=8 sw=8 sts=8 noet:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DEPTH		= ../../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@
relativesrcdir = toolkit/crashreporter/client

include $(DEPTH)/config/autoconf.mk

MODULE = crashreporter

# Don't use the STL wrappers in the crashreporter clients; they don't
# link with -lmozalloc, and it really doesn't matter here anyway.
STL_FLAGS =

ifneq ($(OS_TARGET),Android)
PROGRAM = crashreporter$(BIN_SUFFIX)
DIST_PROGRAM = crashreporter$(BIN_SUFFIX)

# Don't link the updater against libmozglue.
MOZ_GLUE_LDFLAGS =
MOZ_GLUE_PROGRAM_LDFLAGS =
endif

LOCAL_INCLUDES = -I$(srcdir)/../google-breakpad/src

VPATH += $(topsrcdir)/build/

CPPSRCS = \
  crashreporter.cpp \
  $(NULL)

ifeq ($(OS_ARCH),WINNT)
CPPSRCS += crashreporter_win.cpp
LIBS += \
  $(DEPTH)/toolkit/crashreporter/breakpad-windows-libxul/$(LIB_PREFIX)google_breakpad_libxul_s.$(LIB_SUFFIX)
  $(NULL)
LOCAL_INCLUDES += -I$(srcdir)
RCINCLUDE = crashreporter.rc
DEFINES += -DUNICODE -D_UNICODE
OS_LIBS += $(call EXPAND_LIBNAME,comctl32 shell32 wininet shlwapi)
MOZ_WINCONSOLE = 0
endif

ifeq ($(OS_ARCH),Darwin)
CPPSRCS += crashreporter_unix_common.cpp
CMMSRCS += crashreporter_osx.mm
OS_LIBS += -framework Cocoa
LIBS += \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/$(LIB_PREFIX)breakpad_common_s.$(LIB_SUFFIX) \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/mac/$(LIB_PREFIX)breakpad_mac_common_s.$(LIB_SUFFIX) \
  $(NULL)

LOCAL_INCLUDES += -I$(srcdir) -I$(srcdir)/../google-breakpad/src/common/mac/
endif

ifeq ($(MOZ_WIDGET_TOOLKIT),gtk2)
CPPSRCS += crashreporter_gtk_common.cpp crashreporter_unix_common.cpp

ifdef MOZ_PLATFORM_MAEMO
CPPSRCS += crashreporter_maemo_gtk.cpp

# Maemo's libcurl doesn't ship with a set of CA certificates,
# so we have to ship our own.
libs:: $(DIST)/bin/crashreporter.crt

$(DIST)/bin/crashreporter.crt: $(topsrcdir)/security/nss/lib/ckfw/builtins/certdata.txt certdata2pem.py
	$(PYTHON) $(srcdir)/certdata2pem.py < $< > $@

# The xpcshell test case here verifies that the CA certificate list
# works with OpenSSL.
XPCSHELL_TESTS = maemo-unit

else
CPPSRCS += crashreporter_linux.cpp
endif

LIBS += \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/linux/$(LIB_PREFIX)breakpad_linux_common_s.$(LIB_SUFFIX) \
  $(NULL)
LOCAL_INCLUDES += -I$(srcdir)
OS_CXXFLAGS += $(MOZ_GTK2_CFLAGS) $(MOZ_GTHREAD_CFLAGS)
OS_LIBS += $(MOZ_GTK2_LIBS) $(MOZ_GTHREAD_LIBS)
endif

ifeq ($(OS_ARCH),SunOS)
CPPSRCS += crashreporter_linux.cpp crashreporter_unix.cpp
LIBS += \
  $(DEPTH)/toolkit/crashreporter/google-breakpad/src/common/solaris/$(LIB_PREFIX)breakpad_solaris_common_s.$(LIB_SUFFIX) \
  $(NULL)
LOCAL_INCLUDES += -I$(srcdir)
OS_CXXFLAGS += $(MOZ_GTK2_CFLAGS) $(MOZ_GTHREAD_CFLAGS)
OS_LIBS += $(MOZ_GTK2_LIBS) $(MOZ_GTHREAD_LIBS)
endif

include $(topsrcdir)/config/rules.mk

ifeq ($(OS_ARCH),Darwin)
libs::
	$(NSINSTALL) -D $(DIST)/bin/crashreporter.app
	rsync -a -C --exclude "*.in" $(srcdir)/macbuild/Contents $(DIST)/bin/crashreporter.app 
	sed -e "s/%APP_NAME%/$(MOZ_APP_DISPLAYNAME)/" $(srcdir)/macbuild/Contents/Resources/English.lproj/InfoPlist.strings.in | \
	  iconv -f UTF-8 -t UTF-16 > $(DIST)/bin/crashreporter.app/Contents/Resources/English.lproj/InfoPlist.strings
	$(NSINSTALL) -D $(DIST)/bin/crashreporter.app/Contents/MacOS
	$(NSINSTALL) $(DIST)/bin/crashreporter $(DIST)/bin/crashreporter.app/Contents/MacOS
	rm -f $(DIST)/bin/crashreporter
endif

ifeq (,$(filter-out Linux SunOS,$(OS_ARCH)))
libs:: $(topsrcdir)/toolkit/themes/winstripe/global/throbber/Throbber-small.gif
	$(INSTALL) $^ $(DIST)/bin
endif

ifdef MOZ_PLATFORM_MAEMO
libs::
	$(INSTALL) $(DIST)/bin/crashreporter.crt $(DEPTH)/_tests/xpcshell/$(MODULE)/maemo-unit/
endif

#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DEPTH       = @DEPTH@
topsrcdir   = @top_srcdir@
srcdir      = @srcdir@
VPATH       = \
  $(srcdir) \
  $(srcdir)/android \
  $(srcdir)/gonk \
  $(srcdir)/fallback \
  $(srcdir)/sandbox \
  $(srcdir)/linux \
  $(srcdir)/windows \
  $(srcdir)/cocoa \
  $(NULL)

include $(DEPTH)/config/autoconf.mk

MODULE         = hal
LIBRARY_NAME   = hal_s
XPIDL_MODULE   = hal
FORCE_STATIC_LIB = 1
LIBXUL_LIBRARY = 1
EXPORT_LIBRARY = 1
FAIL_ON_WARNINGS = 1

EXPORTS_NAMESPACES = mozilla
EXPORTS_mozilla = \
  Hal.h \
  HalImpl.h \
  HalSandbox.h \
  HalSensor.h \
  HalTypes.h \
  HalWakeLock.h \
  $(NULL)

XPIDLSRCS = \
  nsIRecoveryService.idl \
  $(NULL)

CPPSRCS = \
  Hal.cpp \
  SandboxHal.cpp \
  WindowIdentifier.cpp \
  HalWakeLock.cpp \
  $(NULL)

ifeq (android,$(MOZ_WIDGET_TOOLKIT))
CPPSRCS += \
  AndroidHal.cpp \
  AndroidSensor.cpp \
  FallbackPower.cpp \
  FallbackAlarm.cpp \
  $(NULL)
else ifeq (gonk,$(MOZ_WIDGET_TOOLKIT))
CPPSRCS += \
  GonkHal.cpp \
  LinuxPower.cpp \
  GonkSensor.cpp \
  UeventPoller.cpp \
  GonkSwitch.cpp \
  GonkFMRadio.cpp \
  $(NULL)
else ifeq (Linux,$(OS_TARGET))
CPPSRCS += \
  LinuxPower.cpp \
  FallbackScreenConfiguration.cpp \
  FallbackSensor.cpp \
  FallbackVibration.cpp \
  FallbackAlarm.cpp \
  $(NULL)
ifdef MOZ_ENABLE_DBUS
CPPSRCS += UPowerClient.cpp
else
CPPSRCS += FallbackBattery.cpp
endif
else ifeq (WINNT,$(OS_TARGET))
CPPSRCS += \
  WindowsBattery.cpp \
  WindowsSensor.cpp \
  FallbackVibration.cpp \
  FallbackScreenConfiguration.cpp \
  FallbackPower.cpp \
  FallbackAlarm.cpp \
  $(NULL)
else ifeq (cocoa,$(MOZ_WIDGET_TOOLKIT))
CPPSRCS += \
  CocoaBattery.cpp \
  FallbackVibration.cpp \
  FallbackPower.cpp \
  FallbackScreenConfiguration.cpp \
  FallbackAlarm.cpp \
  $(NULL)
CMMSRCS += \
  CocoaSensor.mm \
  smslib.mm \
  $(NULL)
else ifneq (,$(filter OpenBSD NetBSD FreeBSD DragonFly,$(OS_TARGET)))
CPPSRCS += \
  FallbackSensor.cpp \
  FallbackVibration.cpp \
  FallbackPower.cpp \
  FallbackScreenConfiguration.cpp \
  FallbackAlarm.cpp \
  $(NULL)
ifdef MOZ_ENABLE_DBUS
CPPSRCS += UPowerClient.cpp
else
CPPSRCS += FallbackBattery.cpp
endif
else
CPPSRCS += \
  FallbackBattery.cpp \
  FallbackSensor.cpp \
  FallbackVibration.cpp \
  FallbackPower.cpp \
  FallbackScreenConfiguration.cpp \
  FallbackAlarm.cpp \
  $(NULL)
endif

# Fallbacks for backends implemented on Gonk only.
ifneq (gonk,$(MOZ_WIDGET_TOOLKIT)) #{
CPPSRCS += \
  FallbackLights.cpp  \
  FallbackTime.cpp \
  FallbackWakeLocks.cpp \
  FallbackSwitch.cpp \
  FallbackScreenPower.cpp \
  FallbackProcessPriority.cpp \
  FallbackFMRadio.cpp \
  FallbackFactoryReset.cpp \
  $(NULL)
endif #}

# Fallbacks for backends implemented on Android only.
ifneq (android,$(MOZ_WIDGET_TOOLKIT))
CPPSRCS += FallbackNetwork.cpp
endif

include $(topsrcdir)/config/config.mk
include $(topsrcdir)/ipc/chromium/chromium-config.mk
include $(topsrcdir)/config/rules.mk

CFLAGS          += $(MOZ_DBUS_GLIB_CFLAGS)
CXXFLAGS        += $(MOZ_DBUS_GLIB_CFLAGS)

ifeq (gonk,$(MOZ_WIDGET_TOOLKIT))
# So that we can call nsScreenManagerGonk::GetConfiguration().
LOCAL_INCLUDES += -I$(topsrcdir)/widget/gonk
LOCAL_INCLUDES += -I$(topsrcdir)/widget/xpwidgets
endif

# vim:set ts=8 sw=8 sts=8 noet:
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DEPTH		= @DEPTH@
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= mar
ifeq ($(OS_ARCH),WINNT)
USE_STATIC_LIBS = 1
endif

# The mar executable is output into dist/host/bin since it is something that
# would only be used by our build system and should not itself be included in a
# Mozilla distribution.
HOST_PROGRAM = mar$(HOST_BIN_SUFFIX)

ifdef MOZ_ENABLE_SIGNMAR
PROGRAM = signmar$(BIN_SUFFIX)
endif

# Don't link the against libmozglue because we don't need it.
MOZ_GLUE_LDFLAGS =
MOZ_GLUE_PROGRAM_LDFLAGS =

DEFINES += \
  -DMAR_CHANNEL_ID='"$(MAR_CHANNEL_ID)"' \
  -DMOZ_APP_VERSION='"$(MOZ_APP_VERSION)"' \
  $(NULL)

ifndef MOZ_ENABLE_SIGNMAR
DEFINES += \
  -DNO_SIGN_VERIFY \
  $(NULL)
endif

HOST_CFLAGS += \
  -DNO_SIGN_VERIFY \
  $(DEFINES) \
  $(NULL)

HOST_CSRCS = \
  mar.c \
  $(NULL)
CSRCS = $(HOST_CSRCS)

HOST_LIBS = $(DIST)/host/lib/$(LIB_PREFIX)hostmar.$(LIB_SUFFIX)
LIBS = $(DEPTH)/modules/libmar/src/$(LIB_PREFIX)mar.$(LIB_SUFFIX)

ifdef MOZ_ENABLE_SIGNMAR
LIBS += \
  $(DEPTH)/modules/libmar/sign/$(LIB_PREFIX)signmar.$(LIB_SUFFIX) \
  $(DEPTH)/modules/libmar/verify/$(LIB_PREFIX)verifymar.$(LIB_SUFFIX) \
  $(DIST)/lib/$(LIB_PREFIX)nss3.$(LIB_SUFFIX) \
  $(DIST)/lib/$(LIB_PREFIX)nssutil3.$(LIB_SUFFIX) \
  $(NSPR_LIBS) \
  $(NULL)
endif

ifeq ($(HOST_OS_ARCH),WINNT)
HOST_EXTRA_LIBS += $(call EXPAND_LIBNAME,ws2_32)
EXTRA_LIBS += $(call EXPAND_LIBNAME,ws2_32)
ifdef MOZ_ENABLE_SIGNMAR
EXTRA_LIBS += $(call EXPAND_LIBNAME,crypt32)
EXTRA_LIBS += $(call EXPAND_LIBNAME,advapi32)
endif
endif

include $(topsrcdir)/config/rules.mk

ifdef CROSS_COMPILE
ifdef HOST_NSPR_MDCPUCFG
HOST_CFLAGS += -DMDCPUCFG=$(HOST_NSPR_MDCPUCFG)
CFLAGS += -DMDCPUCFG=$(HOST_NSPR_MDCPUCFG)
endif
endif

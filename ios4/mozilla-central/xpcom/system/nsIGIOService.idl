/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla GNOME integration code.
 *
 * The Initial Developer of the Original Code is
 * IBM Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2004
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *  Brian Ryner <bryner@brianryner.com>
 *  Jan Horak <jhorak@redhat.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIUTF8StringEnumerator;
interface nsIURI;

/* nsIGIOMimeApp holds information about an application that is looked up
   with nsIGIOService::GetAppForMimeType. */
// 66009894-9877-405b-9321-bf30420e34e6 prev uuid

[scriptable, uuid(e77021b4-4012-407d-b686-7a1f18050109)] 
interface nsIGIOMimeApp : nsISupports
{
  const long EXPECTS_URIS  = 0;
  const long EXPECTS_PATHS = 1;
  const long EXPECTS_URIS_FOR_NON_FILES = 2;

  readonly attribute AUTF8String         id;
  readonly attribute AUTF8String         name;
  readonly attribute AUTF8String         command;
  readonly attribute long                expectsURIs;  // see constants above
  readonly attribute nsIUTF8StringEnumerator supportedURISchemes;

  void launch(in AUTF8String uri);
  void setAsDefaultForMimeType(in AUTF8String mimeType);
  void setAsDefaultForFileExtensions(in AUTF8String extensions);
};

/*
 * The VFS service makes use of two distinct registries.
 *
 * The application registry holds information about applications (uniquely
 * identified by id), such as which MIME types and URI schemes they are
 * capable of handling, whether they run in a terminal, etc.
 *
 * The MIME registry holds information about MIME types, such as which
 * extensions map to a given MIME type.  The MIME registry also stores the
 * id of the application selected to handle each MIME type.
 */

// prev id dea20bf0-4e4d-48c5-b932-dc3e116dc64b
[scriptable, uuid(47e372c2-78bb-4899-8114-56aa7d9cdac5)]
interface nsIGIOService : nsISupports
{

  /*** MIME registry methods ***/

  /* Obtain the MIME type registered for an extension.  The extension
     should not include a leading dot. */
  AUTF8String        getMimeTypeFromExtension(in AUTF8String extension);

  /* Obtain the preferred application for opening a given MIME type */
  nsIGIOMimeApp      getAppForMimeType(in AUTF8String mimeType);

  /* Obtain the preferred application for opening a given MIME type */
  nsIGIOMimeApp      createAppFromCommand(in AUTF8String cmd, 
                                          in AUTF8String appName);

  /* Obtain a description for the given MIME type */
  AUTF8String        getDescriptionForMimeType(in AUTF8String mimeType);

  /*** Misc. methods ***/

  /* Open the given URI in the default application */
  void               showURI(in nsIURI uri);
  [noscript] void    showURIForInput(in ACString uri);
};

%{C++
#define NS_GIOSERVICE_CONTRACTID "@mozilla.org/gio-service;1"
%}

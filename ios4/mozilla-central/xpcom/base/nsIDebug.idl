/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is XPCOM
 *
 * The Initial Developer of the Original Code is Doug Turner <dougt@meer.net>
 *
 * Portions created by the Initial Developer are Copyright (C) 2003
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */


#include "nsISupports.idl"

/**
 *   For use by consumers in scripted languages (JavaScript, Java, Python,
 *   Perl, ...).
 *
 * @note C/C++ consumers who are planning to use the nsIDebug interface with
 *   the "@mozilla.org/xpcom;1" contract should use NS_DebugBreak from xpcom
 *   glue instead.
 *
 */

[scriptable, uuid(3bf0c3d7-3bd9-4cf2-a971-33572c503e1e)]
interface nsIDebug : nsISupports
{
  /**
   * Show an assertion and trigger nsIDebug.break().
   *
   * @param aStr assertion message
   * @param aExpr expression that failed
   * @param aFile file containing assertion
   * @param aLine line number of assertion
   *
   */
  void assertion(in string aStr,
                 in string aExpr,
                 in string aFile, 
                 in long aLine);

  /**
   * Show a warning.
   *
   * @param aStr warning message
   * @param aFile file containing assertion
   * @param aLine line number of assertion
   */
  void warning(in string aStr,
               in string aFile,
               in long aLine);

  /**
   * Request to break into a debugger.
   *
   * @param aFile file containing break request
   * @param aLine line number of break request
   */
  void break(in string aFile, 
             in long aLine);

  /**
   * Request the process to trigger a fatal abort.
   *
   * @param aFile file containing abort request
   * @param aLine line number of abort request
   */
  void abort(in string aFile, 
             in long aLine);
};


#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Mozilla Foundation
# Portions created by the Initial Developer are Copyright (C) 2008
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#  Ted Mielczarek <ted.mielczarek@gmail.com>
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

VISIBILITY_FLAGS=
STL_FLAGS	=
ifdef _MSC_VER
STL_FLAGS	= -D_HAS_EXCEPTIONS=0
endif

MODULE		= mozalloc
LIBRARY_NAME	= mozalloc
FORCE_SHARED_LIB= 1
DIST_INSTALL 	= 1

ifdef MOZ_MEMORY
ifneq (,$(findstring mozalloc,$(WRAP_MALLOC_LIB)))
EXTRA_DSO_LDOPTS += $(DIST)/lib/libjemalloc.a
WRAP_MALLOC_LIB=
WRAP_MALLOC_CFLAGS=
DEFINES += -DWRAP_MALLOC_WITH_JEMALLOC
CSRCS = ld_malloc_wrappers.c
ifeq (,$(filter-out Linux,$(OS_TARGET)))
EXTRA_DSO_LDOPTS += -lpthread
endif
endif
endif

ifeq (,$(filter-out WINCE,$(OS_ARCH)))
# mozalloc gets its allocation methods from the shunt, which gets their 
# implementation by direcly linking with jemalloc.obj
OS_LIBS		=
endif

ifeq (,$(filter-out OS2,$(OS_ARCH)))
# The strndup declaration in string.h is in an ifdef __USE_GNU section
DEFINES		+= -D_GNU_SOURCE
endif

EXPORTS_NAMESPACES 	= mozilla
EXPORTS_mozilla 	=			\
	mozalloc.h		 		\
	mozalloc_abort.h			\
	mozalloc_macro_wrappers.h 		\
	mozalloc_oom.h				\
	mozalloc_undef_macro_wrappers.h		\
	$(NULL)

CPPSRCS 		=			\
	mozalloc.cpp				\
	mozalloc_abort.cpp			\
	mozalloc_oom.cpp			\
	$(NULL)

ifdef WRAP_STL_INCLUDES #{
ifdef GNU_CXX #{
EXPORTS_mozilla	+= throw_gcc.h
else
ifdef _MSC_VER #{
EXPORTS_mozilla	+= throw_msvc.h
ifdef MOZ_MSVC_STL_WRAP__Throw #{
EXPORTS_mozilla	+= msvc_throw_wrapper.h
CPPSRCS		+= msvc_throw_wrapper.cpp
else
ifdef MOZ_MSVC_STL_WRAP__RAISE #{
EXPORTS_mozilla	+= msvc_raise_wrappers.h
CPPSRCS		+= msvc_raise_wrappers.cpp
else
$(error Unknown STL wrapper tactic for MSVC)
endif #}
endif #}
endif #}
endif #}
endif #}

ifneq (,$(filter OS2 WINCE WINNT,$(OS_ARCH)))
SDK_LIBRARY = $(IMPORT_LIBRARY)
else
SDK_LIBRARY = $(SHARED_LIBRARY)
endif

include $(topsrcdir)/config/rules.mk

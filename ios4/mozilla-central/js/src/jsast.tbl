/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code, released
 * March 31, 1998.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/* AST_ERROR = -1 */

ASTDEF(AST_PROGRAM,               "Program")

ASTDEF(AST_IDENTIFIER,            "Identifier")
ASTDEF(AST_LITERAL,               "Literal")
ASTDEF(AST_PROPERTY,              "Property")

ASTDEF(AST_FUNC_DECL,             "FunctionDeclaration")
ASTDEF(AST_VAR_DECL,              "VariableDeclaration")
ASTDEF(AST_VAR_DTOR,              "VariableDeclarator")

ASTDEF(AST_LIST_EXPR,             "SequenceExpression")
ASTDEF(AST_COND_EXPR,             "ConditionalExpression")
ASTDEF(AST_UNARY_EXPR,            "UnaryExpression")
ASTDEF(AST_BINARY_EXPR,           "BinaryExpression")
ASTDEF(AST_ASSIGN_EXPR,           "AssignmentExpression")
ASTDEF(AST_LOGICAL_EXPR,          "LogicalExpression")
ASTDEF(AST_UPDATE_EXPR,           "UpdateExpression")
ASTDEF(AST_NEW_EXPR,              "NewExpression")
ASTDEF(AST_CALL_EXPR,             "CallExpression")
ASTDEF(AST_MEMBER_EXPR,           "MemberExpression")
ASTDEF(AST_FUNC_EXPR,             "FunctionExpression")
ASTDEF(AST_ARRAY_EXPR,            "ArrayExpression")
ASTDEF(AST_OBJECT_EXPR,           "ObjectExpression")
ASTDEF(AST_THIS_EXPR,             "ThisExpression")
ASTDEF(AST_GRAPH_EXPR,            "GraphExpression")
ASTDEF(AST_GRAPH_IDX_EXPR,        "GraphIndexExpression")
ASTDEF(AST_COMP_EXPR,             "ComprehensionExpression")
ASTDEF(AST_GENERATOR_EXPR,        "GeneratorExpression")
ASTDEF(AST_YIELD_EXPR,            "YieldExpression")

ASTDEF(AST_EMPTY_STMT,            "EmptyStatement")
ASTDEF(AST_BLOCK_STMT,            "BlockStatement")
ASTDEF(AST_EXPR_STMT,             "ExpressionStatement")
ASTDEF(AST_LAB_STMT,              "LabeledStatement")
ASTDEF(AST_IF_STMT,               "IfStatement")
ASTDEF(AST_SWITCH_STMT,           "SwitchStatement")
ASTDEF(AST_WHILE_STMT,            "WhileStatement")
ASTDEF(AST_DO_STMT,               "DoWhileStatement")
ASTDEF(AST_FOR_STMT,              "ForStatement")
ASTDEF(AST_FOR_IN_STMT,           "ForInStatement")
ASTDEF(AST_BREAK_STMT,            "BreakStatement")
ASTDEF(AST_CONTINUE_STMT,         "ContinueStatement")
ASTDEF(AST_WITH_STMT,             "WithStatement")
ASTDEF(AST_RETURN_STMT,           "ReturnStatement")
ASTDEF(AST_TRY_STMT,              "TryStatement")
ASTDEF(AST_THROW_STMT,            "ThrowStatement")
ASTDEF(AST_DEBUGGER_STMT,         "DebuggerStatement")

ASTDEF(AST_CASE,                  "SwitchCase")
ASTDEF(AST_CATCH,                 "CatchClause")
ASTDEF(AST_COMP_BLOCK,            "ComprehensionBlock")

ASTDEF(AST_ARRAY_PATT,            "ArrayPattern")
ASTDEF(AST_OBJECT_PATT,           "ObjectPattern")

ASTDEF(AST_XMLANYNAME,            "XMLAnyName")
ASTDEF(AST_XMLATTR_SEL,           "XMLAttributeSelector")
ASTDEF(AST_XMLESCAPE,             "XMLEscape")
ASTDEF(AST_XMLFILTER,             "XMLFilterExpression")
ASTDEF(AST_XMLDEFAULT,            "XMLDefaultDeclaration")
ASTDEF(AST_XMLQUAL,               "XMLQualifiedIdentifier")
ASTDEF(AST_XMLELEM,               "XMLElement")
ASTDEF(AST_XMLTEXT,               "XMLText")
ASTDEF(AST_XMLLIST,               "XMLList")
ASTDEF(AST_XMLSTART,              "XMLStartTag")
ASTDEF(AST_XMLEND,                "XMLEndTag")
ASTDEF(AST_XMLPOINT,              "XMLPointTag")
ASTDEF(AST_XMLNAME,               "XMLName")
ASTDEF(AST_XMLATTR,               "XMLAttribute")
ASTDEF(AST_XMLCDATA,              "XMLCdata")
ASTDEF(AST_XMLCOMMENT,            "XMLComment")
ASTDEF(AST_XMLPI,                 "XMLProcessingInstruction")

/* AST_LIMIT = last + 1 */

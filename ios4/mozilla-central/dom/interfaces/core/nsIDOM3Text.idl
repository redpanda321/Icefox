/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is DOM 3 Core interface definitions.
 *
 * The Initial Developer of the Original Code is
 * Jeff Walden <jwalden+code@mit.edu>.
 * Portions created by the Initial Developer are Copyright (C) 2008
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "domstubs.idl"

[scriptable, uuid(BCCA052E-46F4-4B8E-8859-A86776C2F1D7)]
interface nsIDOM3Text : nsISupports
{
  /**
   * Indicates whether this text node contains element content whitespace.
   * A text node is element content whitespace if it contains only XML
   * white space characters and is a child of an element whose content
   * model allows only child elements optionally separated by white space.
   */
  readonly attribute boolean isElementContentWhitespace;

  /**
   * The concatenation of all logically adjacent text nodes with this text
   * node, where "logically adjacent" consists of all text nodes which can be
   * reached by traversing the document tree in either direction without
   * passing an element, comment, or processing-instruction boundary.  
   */
  readonly attribute DOMString wholeText;

  /**
   * If content is empty, removes all logically adjacent text nodes (including
   * this node) from the DOM tree, returning null; otherwise, replaces the
   * contents of this node with aContent and removes all other logically
   * adjacent text nodes from the DOM tree, returning this node.
   */
  nsIDOMText replaceWholeText(in DOMString content) raises(DOMException);
};

diff --git a/media/libvpx/vp8/common/blockd.h b/media/libvpx/vp8/common/blockd.h
--- a/media/libvpx/vp8/common/blockd.h
+++ b/media/libvpx/vp8/common/blockd.h
@@ -90,17 +90,17 @@ typedef enum
     MB_MODE_COUNT
 } MB_PREDICTION_MODE;
 
 // Macroblock level features
 typedef enum
 {
     MB_LVL_ALT_Q = 0,               // Use alternate Quantizer ....
     MB_LVL_ALT_LF = 1,              // Use alternate loop filter value...
-    MB_LVL_MAX = 2,                 // Number of MB level features supported
+    MB_LVL_MAX = 2                 // Number of MB level features supported
 
 } MB_LVL_FEATURES;
 
 // Segment Feature Masks
 #define SEGMENT_ALTQ    0x01
 #define SEGMENT_ALT_LF  0x02
 
 #define VP8_YMODES  (B_PRED + 1)
diff --git a/media/libvpx/vp8/common/ppflags.h b/media/libvpx/vp8/common/ppflags.h
--- a/media/libvpx/vp8/common/ppflags.h
+++ b/media/libvpx/vp8/common/ppflags.h
@@ -15,12 +15,12 @@ enum
 {
     VP8D_NOFILTERING    = 0,
     VP8D_DEBLOCK        = 1,
     VP8D_DEMACROBLOCK   = 2,
     VP8D_ADDNOISE       = 4,
     VP8D_DEBUG_LEVEL1   = 8,
     VP8D_DEBUG_LEVEL2   = 16,
     VP8D_DEBUG_LEVEL3   = 32,
-    VP8D_DEBUG_LEVEL4   = 64,
+    VP8D_DEBUG_LEVEL4   = 64
 };
 
 #endif
diff --git a/media/libvpx/vpx/vp8.h b/media/libvpx/vpx/vp8.h
--- a/media/libvpx/vpx/vp8.h
+++ b/media/libvpx/vpx/vp8.h
@@ -48,17 +48,17 @@ enum vp8_dec_control_id
  *
  * The set of macros define VP8 decoder post processing flags
  */
 enum vp8_postproc_level
 {
     VP8_NOFILTERING    = 0,
     VP8_DEBLOCK        = 1,
     VP8_DEMACROBLOCK   = 2,
-    VP8_ADDNOISE       = 4,
+    VP8_ADDNOISE       = 4
 };
 
 /*!\brief post process flags
  *
  * This define a structure that describe the post processing settings. For
  * the best objective measure (using thet PSNR metric) set post_proc_flag
  * to VP8_DEBLOCK and deblocking_level to 1.
  */
diff --git a/media/libvpx/vpx/vpx_codec.h b/media/libvpx/vpx/vpx_codec.h
--- a/media/libvpx/vpx/vpx_codec.h
+++ b/media/libvpx/vpx/vpx_codec.h
@@ -57,17 +57,17 @@ extern "C" {
 #define DEPRECATED
 #define DECLSPEC_DEPRECATED /**< \copydoc #DEPRECATED */
 #endif
 #endif
 
     /*!\brief Decorator indicating a function is potentially unused */
 #ifdef UNUSED
 #elif __GNUC__
-#define UNUSED __attribute__ ((unused));
+#define UNUSED __attribute__ ((unused))
 #else
 #define UNUSED
 #endif
 
     /*!\brief Current ABI version number
      *
      * \internal
      * If this file is altered in any way that changes the ABI, this value
@@ -123,17 +123,17 @@ extern "C" {
         /*!\brief An application-supplied parameter is not valid.
          *
          */
         VPX_CODEC_INVALID_PARAM,
 
         /*!\brief An iterator reached the end of list.
          *
          */
-        VPX_CODEC_LIST_END,
+        VPX_CODEC_LIST_END
 
     }
     vpx_codec_err_t;
 
 
     /*! \brief Codec capabilities bitfield
      *
      *  Each codec advertises the capabilities it supports as part of its
diff --git a/media/libvpx/vpx/vpx_decoder_compat.h b/media/libvpx/vpx/vpx_decoder_compat.h
--- a/media/libvpx/vpx/vpx_decoder_compat.h
+++ b/media/libvpx/vpx/vpx_decoder_compat.h
@@ -73,17 +73,17 @@ extern "C" {
         /*!\brief An application-supplied parameter is not valid.
          *
          */
         VPX_DEC_INVALID_PARAM = VPX_CODEC_INVALID_PARAM,
 
         /*!\brief An iterator reached the end of list.
          *
          */
-        VPX_DEC_LIST_END = VPX_CODEC_LIST_END,
+        VPX_DEC_LIST_END = VPX_CODEC_LIST_END
 
     }
     vpx_dec_err_t;
 
     /*! \brief Decoder capabilities bitfield
      *
      *  Each decoder advertises the capabilities it supports as part of its
      *  ::vpx_dec_iface_t interface structure. Capabilities are extra interfaces
diff --git a/media/libvpx/vpx/vpx_encoder.h b/media/libvpx/vpx/vpx_encoder.h
--- a/media/libvpx/vpx/vpx_encoder.h
+++ b/media/libvpx/vpx/vpx_encoder.h
@@ -166,17 +166,17 @@ extern "C" {
     } vpx_rational_t; /**< alias for struct vpx_rational */
 
 
     /*!\brief Multi-pass Encoding Pass */
     enum vpx_enc_pass
     {
         VPX_RC_ONE_PASS,   /**< Single pass mode */
         VPX_RC_FIRST_PASS, /**< First pass of multi-pass mode */
-        VPX_RC_LAST_PASS,  /**< Final pass of multi-pass mode */
+        VPX_RC_LAST_PASS  /**< Final pass of multi-pass mode */
     };
 
 
     /*!\brief Rate control mode */
     enum vpx_rc_mode
     {
         VPX_VBR, /**< Variable Bit Rate (VBR) mode */
         VPX_CBR  /**< Constant Bit Rate (CBR) mode */
diff --git a/media/libvpx/vpx/vpx_image.h b/media/libvpx/vpx/vpx_image.h
--- a/media/libvpx/vpx/vpx_image.h
+++ b/media/libvpx/vpx/vpx_image.h
@@ -50,17 +50,17 @@ extern "C" {
         VPX_IMG_FMT_RGB32_LE, /**< 32 bit packed BGR0 */
         VPX_IMG_FMT_ARGB,     /**< 32 bit packed ARGB, alpha=255 */
         VPX_IMG_FMT_ARGB_LE,  /**< 32 bit packed BGRA, alpha=255 */
         VPX_IMG_FMT_RGB565_LE,  /**< 16 bit per pixel, gggbbbbb rrrrrggg */
         VPX_IMG_FMT_RGB555_LE,  /**< 16 bit per pixel, gggbbbbb 0rrrrrgg */
         VPX_IMG_FMT_YV12    = VPX_IMG_FMT_PLANAR | VPX_IMG_FMT_UV_FLIP | 1, /**< planar YVU */
         VPX_IMG_FMT_I420    = VPX_IMG_FMT_PLANAR | 2,
         VPX_IMG_FMT_VPXYV12 = VPX_IMG_FMT_PLANAR | VPX_IMG_FMT_UV_FLIP | 3, /** < planar 4:2:0 format with vpx color space */
-        VPX_IMG_FMT_VPXI420 = VPX_IMG_FMT_PLANAR | 4,  /** < planar 4:2:0 format with vpx color space */
+        VPX_IMG_FMT_VPXI420 = VPX_IMG_FMT_PLANAR | 4  /** < planar 4:2:0 format with vpx color space */
     }
     vpx_img_fmt_t; /**< alias for enum vpx_img_fmt */
 
 #if !defined(VPX_CODEC_DISABLE_COMPAT) || !VPX_CODEC_DISABLE_COMPAT
 #define IMG_FMT_PLANAR         VPX_IMG_FMT_PLANAR     /**< \deprecated Use #VPX_IMG_FMT_PLANAR */
 #define IMG_FMT_UV_FLIP        VPX_IMG_FMT_UV_FLIP    /**< \deprecated Use #VPX_IMG_FMT_UV_FLIP */
 #define IMG_FMT_HAS_ALPHA      VPX_IMG_FMT_HAS_ALPHA  /**< \deprecated Use #VPX_IMG_FMT_HAS_ALPHA */
 

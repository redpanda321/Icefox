<?xml version="1.0"?>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the Places test code.
   -
   - The Initial Developer of the Original Code is Mozilla Corp.
   - Portions created by the Initial Developer are Copyright (C) 2009
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Marco Bonardo <mak77@bonardo.net> (Original Author)
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<!-- Bug 466422:
   - Check that we replace the left pane with a correct one if it gets corrupted
   - and we end up having more than one. -->

<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css"
                 type="text/css"?>

<?xml-stylesheet href="chrome://browser/content/places/places.css"?>
<?xml-stylesheet href="chrome://browser/skin/places/places.css"?>

<?xul-overlay href="chrome://browser/content/places/placesOverlay.xul"?>

<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        title="Test handling of multiple left pane folders"
        onload="runTest();">

  <script type="application/javascript"
          src="chrome://mochikit/content/MochiKit/packed.js" />
  <script type="application/javascript"
          src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js" />

  <body xmlns="http://www.w3.org/1999/xhtml">
    <p id="display"></p>
    <div id="content" style="display: none"></div>
    <pre id="test"></pre>
  </body>

  <script type="application/javascript">
  <![CDATA[

    function runTest() {
      // Sanity checks.
      ok(PlacesUtils, "PlacesUtils is running in chrome context");
      ok(PlacesUIUtils, "PlacesUIUtils is running in chrome context");
      ok(PlacesUIUtils.ORGANIZER_LEFTPANE_VERSION > 0,
         "Left pane version in chrome context, " +
           "current version is: " + PlacesUIUtils.ORGANIZER_LEFTPANE_VERSION );

      var fakeLeftPanes = [];
      var as = PlacesUtils.annotations;
      var bs = PlacesUtils.bookmarks;

      // We need 2 left pane folders to simulate a corrupt profile.
      do {
        let leftPaneItems = as.getItemsWithAnnotation(PlacesUIUtils.ORGANIZER_FOLDER_ANNO);
        // Create a fake left pane folder.
        let fakeLeftPaneRoot = bs.createFolder(PlacesUtils.placesRootId, "",
                                               bs.DEFAULT_INDEX);
        as.setItemAnnotation(fakeLeftPaneRoot, PlacesUIUtils.ORGANIZER_FOLDER_ANNO,
                             PlacesUIUtils.ORGANIZER_LEFTPANE_VERSION, 0,
                             as.EXPIRE_NEVER);
        fakeLeftPanes.push(fakeLeftPaneRoot);
      } while (fakeLeftPanes.length < 2);

      // Initialize the left pane queries.
      PlacesUIUtils.leftPaneFolderId;

      // Check left pane.
      ok(PlacesUIUtils.leftPaneFolderId > 0,
         "Left pane folder correctly created");
      var leftPaneItems = as.getItemsWithAnnotation(PlacesUIUtils.ORGANIZER_FOLDER_ANNO);
      is(leftPaneItems.length, 1,
         "We correctly have only 1 left pane folder");

      // Check that all old left pane items have been removed.
      fakeLeftPanes.forEach(function(aItemId) {
        try {
          bs.getItemTitle(aItemId);
          throw("This folder should have been removed");
        } catch (ex) {}
      });

    }
  ]]>
  </script>

</window>

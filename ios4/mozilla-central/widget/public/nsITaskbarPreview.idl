/* vim: se cin sw=2 ts=2 et : */
/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Mozilla Foundation.
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Rob Arnold <tellrob@gmail.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIBaseWindow.idl"

interface nsITaskbarPreviewController;

/**
 * nsITaskbarPreview
 *
 * Common interface for both window and tab taskbar previews. This interface
 * cannot be instantiated directly.
 *
 */
[scriptable, uuid(CBFDF766-D002-403B-A3D9-B091C9AD465B)]
interface nsITaskbarPreview : nsISupports
{
  /**
   * The controller for this preview. A controller is required to provide
   * the behavior and appearance of the taskbar previews. It is responsible for
   * determining the size and contents of the preview, which buttons are
   * displayed and how the application responds to user actions on the preview.
   *
   * Neither preview makes full use of the controller. See the documentation
   * for nsITaskbarWindowPreview and nsITaskbarTabPreview for details on which
   * controller methods are used.
   *
   * The controller is not allowed to be null.
   *
   * @see nsITaskbarPreviewController
   */
  attribute nsITaskbarPreviewController controller;

  /**
   * The tooltip displayed above the preview when the user hovers over it
   *
   * Default: an empty string
   */
  attribute DOMString tooltip;

  /**
   * Whether or not the preview is visible.
   *
   * Changing this option is expensive for tab previews since toggling this
   * option will destroy/create the proxy window and its registration with the
   * taskbar. If any step of that fails, an exception will be thrown.
   *
   * For window previews, this operation is very cheap.
   *
   * Default: false
   */
  attribute boolean visible;

  /**
   * Gets/sets whether or not the preview is marked active (selected) in the
   * taskbar.
   */
  attribute boolean active;

  /**
   * Invalidates the taskbar's cached image of this preview, forcing a redraw
   * if necessary
   */
  void invalidate();
};


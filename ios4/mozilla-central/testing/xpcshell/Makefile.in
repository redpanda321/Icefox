#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Mozilla.org.
# Portions created by the Initial Developer are Copyright (C) 2005
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#     Boris Zbarsky <bzbarsky@mit.edu>  (Original author)
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= testing_xpcshell

# Here's how you let the build system know there are tests in the
# "example" folder:
ifdef ENABLE_TESTS
DIRS  += example
endif

include $(topsrcdir)/config/rules.mk

# Harness files from the srcdir
TEST_HARNESS_FILES := \
  runxpcshelltests.py \
  remotexpcshelltests.py \
  head.js \
  $(NULL)

# Extra files needed from $(topsrcdir)/build
EXTRA_BUILD_FILES := \
  automationutils.py \
  poster.zip \
  $(NULL)

# And files for running xpcshell remotely from $(topsrcdir)/build/mobile
MOBILE_BUILD_FILES := \
  devicemanager.py \
  $(NULL)

# Components / typelibs that don't get packaged with
# the build, but that we need for the test harness.
TEST_HARNESS_COMPONENTS := \
  httpd.js \
  httpd.manifest \
  $(NULL)

ifdef MOZ_CRASHREPORTER
#XXX: should find a better way to do this
TEST_HARNESS_COMPONENTS +=  crashreporter_test.xpt
endif

ifdef MOZ_ENABLE_LIBXUL
TEST_HARNESS_COMPONENTS += xpcom_typelib_test.jar
endif

# Rules for staging the necessary harness bits for a test package
PKG_STAGE = $(DIST)/test-package-stage

stage-package:
	$(NSINSTALL) -D $(PKG_STAGE)/xpcshell/tests
	@(cd $(srcdir) && tar $(TAR_CREATE_FLAGS) - $(TEST_HARNESS_FILES)) | (cd $(PKG_STAGE)/xpcshell && tar -xf -)
	@(cd $(topsrcdir)/build && tar $(TAR_CREATE_FLAGS) - $(EXTRA_BUILD_FILES)) | (cd $(PKG_STAGE)/xpcshell && tar -xf -)
	@(cd $(topsrcdir)/build/mobile && tar $(TAR_CREATE_FLAGS) - $(MOBILE_BUILD_FILES)) | (cd $(PKG_STAGE)/xpcshell && tar -xf -)
	@(cd $(DEPTH)/_tests/xpcshell/ && tar $(TAR_CREATE_FLAGS) - *) | (cd $(PKG_STAGE)/xpcshell/tests && tar -xf -)
	@(cd $(DIST)/bin/components && tar $(TAR_CREATE_FLAGS) - $(TEST_HARNESS_COMPONENTS)) | (cd $(PKG_STAGE)/bin/components && tar -xf -)

/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code, released
 * March 31, 1998.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998-1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Kevin Gerich (webmail@kmgerich.com)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/* all localizable skin settings shall live here */
@import url("chrome://global/locale/intl.css");

%include shared.inc
@namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");

/* ::::: XBL bindings ::::: */

menulist > menupopup,
.menulist-menupopup {
  -moz-binding: url("chrome://global/content/bindings/popup.xml#popup-scrollbars");
}

.menulist-compact {
  -moz-binding: url("chrome://global/content/bindings/menulist.xml#menulist-compact");
}

progressmeter {
  -moz-binding: url("chrome://global/content/bindings/progressmeter.xml#progressmeter-periodic-redraw");
}

/* ::::: draggable elements ::::: */

toolbar:not([nowindowdrag="true"]) {
  -moz-binding: url("chrome://global/content/bindings/toolbar.xml#toolbar-drag");
}

statusbar:not([nowindowdrag="true"]) {
  -moz-binding: url("chrome://global/content/bindings/general.xml#statusbar-drag");
}

windowdragbox {
  -moz-binding: url("chrome://global/content/bindings/general.xml#windowdragbox");
}

/* ::::: root elements ::::: */

window,
page,
dialog,
wizard,
prefwindow { 
  -moz-appearance: dialog;
  background-color: #FFFFFF;
  color: -moz-DialogText;
  font: message-box;
}

prefwindow[type="child"] {
  padding-top: 18px;
  padding-bottom: 15px;
  -moz-padding-start: 18px;
  -moz-padding-end: 20px;
}

/* deprecated */
window.dialog {
  padding-top: 8px;
  padding-bottom: 10px;
  -moz-padding-start: 8px;
  -moz-padding-end: 10px;
}

/* ::::: alert icons :::::*/

.message-icon,
.alert-icon,
.error-icon,
.question-icon {
  width: 64px;
  height: 64px;
  margin: 6px;
  -moz-margin-end: 20px;
}

.message-icon {
  list-style-image: url("chrome://global/skin/icons/information-64.png");
}

.alert-icon {
  list-style-image: url("chrome://global/skin/icons/warning-64.png");
}

.error-icon {
  list-style-image: url("chrome://global/skin/icons/error-64.png");
}

.question-icon {
  list-style-image: url("chrome://global/skin/icons/question-64.png");
}

/* ::::: iframe ::::: */

iframe {
  border: none;
  width: 100px;
  height: 100px;
  min-width: 10px;
  min-height: 10px;
}

/* ::::: statusbar ::::: */

statusbar {
  min-width: 1px; /* DON'T DELETE!
  Prevents hiding of scrollbars in browser when window is made smaller.*/
  min-height: 15px !important;
  margin: 0px !important;
  padding: 0px 16px 1px 1px;
  -moz-appearance: statusbar;
  text-shadow: rgba(255, 255, 255, 0.4) 0 1px;
}

statusbarpanel {
  -moz-box-align: center;
  -moz-box-pack: center;
  padding: 0 4px;
}

.statusbarpanel-iconic {
  padding: 0px;
}    

/* ::::: miscellaneous formatting ::::: */

:root:-moz-lwtheme,
[lwthemefooter="true"] {
  -moz-appearance: none;
}

:root:-moz-lwtheme-darktext {
  text-shadow: 1px 1px 2px white;
}

:root:-moz-lwtheme-brighttext {
  text-shadow: 1px 1px 2px black;
}

statusbar:-moz-lwtheme {
  -moz-appearance: none;
  background: none;
  border-style: none;
  text-shadow: inherit;
}

.inset {
  border: 1px solid ThreeDShadow;
  border-right-color: ThreeDHighlight;
  border-bottom-color: ThreeDHighlight;
  margin: 0 5px 5px;
}
  
.outset {
  border: 1px solid ThreeDShadow;
  border-left-color: ThreeDHighlight;
  border-top-color: ThreeDHighlight;
}

separator:not([orient="vertical"]) {
  height: 1.5em;
}
separator[orient="vertical"] {
  width: 1.5em;
}

separator.thin:not([orient="vertical"]) {
  height: 0.5em;
}  
separator.thin[orient="vertical"] {
  width: 0.5em;
}

separator.groove:not([orient="vertical"]) {
  border-top: 1px solid #A3A3A3;
  height: 0;
  margin-top: 0.4em;
  margin-bottom: 0.4em;
}
separator.groove[orient="vertical"] {
  border-left: 1px solid #A3A3A3;
  width: 0;
  margin-left: 0.4em;
  margin-right: 0.4em;
}
    
.plain {
  -moz-appearance: none;
  margin: 0 !important;
  border: none;
  padding: 0;
}

description,
label {
  cursor: default;
}

label {
  margin: 2px 6px;
}

label[disabled="true"] {
  color: GrayText;
}

.tooltip-label {
  margin: 0;
}

description {
  margin-bottom: 4px;
}

.header {
  margin-bottom: 6px;
  font-weight: bold;
}

.monospace {
  font-family: monospace;
}

.indent {
  -moz-margin-start: 23px;
}

.box-padded {
  padding: 5px;
}

.spaced {
  margin: 3px 5px 4px;
}

.wizard-box {
  padding: 20px 44px 10px;
}

.text-link {
  color: -moz-nativehyperlinktext;
  text-decoration: underline;
  border: 1px solid transparent;
  cursor: pointer;
}
  
.text-link:-moz-focusring {
  border: 1px dotted -moz-DialogText;
}

.toolbar-focustarget {
  -moz-user-focus: ignore !important;
}

notification > button {
  margin: 0 3px;
  padding: 1px 10px;
  min-width: 60px;
  min-height: 16px;
  -moz-appearance: none;
  -moz-border-radius: 100%;
  border: @roundButtonBorder@;
  text-shadow: @loweredShadow@;
  background: @roundButtonBackground@;
  -moz-box-shadow: @roundButtonShadow@;
}

notification > button:active:hover {
  background: @roundButtonPressedBackground@;
  -moz-box-shadow: @roundButtonPressedShadow@;
}

notification > button:-moz-focusring {
  -moz-box-shadow: @focusRingShadow@, @roundButtonShadow@;
}

notification > button:active:hover:-moz-focusring {
  -moz-box-shadow: @focusRingShadow@, @roundButtonPressedShadow@;
}

notification > button > .button-box > .button-text {
  margin: 0 !important;
}

/* :::::: autoscroll popup ::::: */

.autoscroller {
  height: 28px;
  width: 28px;
  border: none;
  margin: -14px;
  padding: 0;
  background-image: url("chrome://global/skin/icons/autoscroll.png");
  background-color: transparent;
  background-position: right top;
  -moz-appearance: none;
  -moz-window-shadow: none;
}

.autoscroller[scrolldir="NS"] {
  background-position: right center;
}

.autoscroller[scrolldir="EW"] {
  background-position: right bottom;
}

/* autorepeatbuttons in menus */

.popup-internal-box > autorepeatbutton {
  height: 15px;
  position: relative;
  /* Here we're using a little magic.
   * The arrow button is supposed to overlay the scrollbox, blocking
   * everything under it from reaching the screen. However, the menu background
   * is slightly transparent, so how can we block something completely without
   * messing up the transparency? It's easy: The native theming of the
   * "menuitem" appearance uses CGContextClearRect before drawing, which
   * clears everything under it.
   * Without help from native theming this effect wouldn't be achievable.
   */
  -moz-appearance: menuitem;
}

.popup-internal-box > .autorepeatbutton-up {
  margin-bottom: -15px;
}

.popup-internal-box > .autorepeatbutton-down {
  margin-top: -15px;
}

.popup-internal-box > autorepeatbutton[disabled="true"] {
  visibility: collapse;
}

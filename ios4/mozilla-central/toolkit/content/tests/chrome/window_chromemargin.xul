<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Findbar Test code
   -
   - The Initial Developer of the Original Code is
   - Mozilla Foundation.
   - Portions created by the Initial Developer are Copyright (C) 2010
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>

<window id="window" title="Subframe Origin Tests"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
<script type="application/javascript"
        src="chrome://mochikit/content/tests/SimpleTest/EventUtils.js"/>
chrome margins rock!
<script>

// Tests parsing of the chrome margin attrib on a window.

function ok(condition, message) {
  window.opener.wrappedJSObject.SimpleTest.ok(condition, message);
}

function doSingleTest(param, shouldSucceed)
{
  var exception = null;
  try {
    document.documentElement.removeAttribute("chromemargin");
    document.documentElement.setAttribute("chromemargin", param);
    ok(document.
       documentElement.
       getAttribute("chromemargin") == param, "couldn't set/get chromemargin?");
  } catch (ex) {
    exception = ex;
  }
  if (shouldSucceed)
    ok(!exception, "failed for param:'" + param + "'");
  else
    ok(exception, "did not fail for invalid param:'" + param + "'");
  return true;
}

function runTests()
{
  var doc = document.documentElement;

  // make sure we can set and get
  doc.setAttribute("chromemargin", "0,0,0,0");
  ok(doc.getAttribute("chromemargin") == "0,0,0,0", "couldn't set/get chromemargin?");
  doc.setAttribute("chromemargin", "-1,-1,-1,-1");
  ok(doc.getAttribute("chromemargin") == "-1,-1,-1,-1", "couldn't set/get chromemargin?");

  // test remove
  doc.removeAttribute("chromemargin");
  ok(doc.getAttribute("chromemargin") == "", "couldn't remove chromemargin?");

  // we already test these really well in a c++ test in widget
  doSingleTest("1,2,3,4", true);
  doSingleTest("-2,-2,-2,-2", true);
  doSingleTest("1,1,1,1", true);
  doSingleTest("", false);
  doSingleTest("12123123", false);
  doSingleTest("0,-1,-1,-1", true);
  doSingleTest("-1,0,-1,-1", true);
  doSingleTest("-1,-1,0,-1", true);
  doSingleTest("-1,-1,-1,0", true);
  doSingleTest("1234567890,1234567890,1234567890,1234567890", true);
  doSingleTest("-1,-1,-1,-1", true);

  window.opener.wrappedJSObject.SimpleTest.finish();
  window.close();
}

window.opener.wrappedJSObject.SimpleTest.waitForFocus(runTests, window);

</script>
</window>

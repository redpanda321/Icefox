/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla camera code.
 *
 * The Initial Developer of the Original Code is
 *   Mozilla Foundation.
 * Portions created by the Initial Developer are Copyright (C) 2010
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Kyle Huey <me@kylehuey.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIDOMWindow;
interface nsIURI;

[scriptable, uuid(a4e2b2de-5712-4f80-aabb-7de3a747f227)]
interface nsICapturePicker : nsISupports
{
  const long MODE_STILL = 1;               // Capture a still (image)
  const long MODE_AUDIO_CLIP = 2;          // Capture a clip of audio
  const long MODE_VIDEO_CLIP = 3;          // Capture a clip of video
  const long MODE_VIDEO_NO_SOUND_CLIP = 4; // Capture a clip of video (no sound)

  // Return codes from the dialog
  const long RETURN_OK = 0;
  const long RETURN_CANCEL = 1;

  /**
   * Initialize the camera picker widget.  The camera picker is not valid until this
   * method is called.
   *
   * @param      parent     nsIDOMWindow parent.  This dialog will be dependent
   *                        on this parent.  This must not be null.
   * @param      title      The title for the file widget
   * @param      flags      Mode and type flags for what to capture
   *
   */
  void init(in nsIDOMWindow parent, in AString title, in unsigned long mode);

  /**
   * Show file dialog.  The dialog is displayed modally.
   *
   * @return returnOK if the user captures the requested content, returnCancel if
   *         the user cancels the capture process
   */
  unsigned long show();

  /**
   * Determine if the given mode might be available.  Consumers should take a
   * true value to be a hint of what might be available, not a guarantee.
   *
   * @param      mode       Mode to examine
   *
   * @return false if the requested mode can definitely not be captured,
   *         true otherwise.
   */
  boolean modeMayBeAvailable(in unsigned long mode);

  /**
   * Get the captured image/video/audio.  This may be a data URI, file URI,
   * or a moz-filedata reference URI.
   */
  readonly attribute nsIURI uri;

  // The MIME type of the captured content.  Cannot be set after calling show()
  attribute AString type;
};

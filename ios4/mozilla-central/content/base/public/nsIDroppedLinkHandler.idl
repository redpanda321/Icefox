/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is the Mozilla Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2010
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Neil Deakin <enndeakin@gmail.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIDOMDragEvent;
interface nsIURI;

[scriptable, uuid(F266B79B-7026-4D2D-B4BD-4F2C6B6C59B4)]
interface nsIDroppedLinkHandler : nsISupports
{
  /**
   * Determines if a link being dragged can be dropped and returns true if so.
   * aEvent should be a dragenter or dragover event.
   *
   * If aAllowSameDocument is false, drops are only allowed if the document
   * of the source of the drag is different from the destination. This check
   * includes any parent, sibling and child frames in the same content tree.
   * If true, the source is not checked.
   */
  boolean canDropLink(in nsIDOMDragEvent aEvent, in PRBool aAllowSameDocument);

  /**
   * Given a drop event aEvent, determines the link being dragged and returns
   * it. If a uri is returned the caller can, for instance, load it. If null
   * is returned, there is no valid link to be dropped. A
   * NS_ERROR_DOM_SECURITY_ERR error will be thrown and the event cancelled if
   * the receiving target should not load the uri for security reasons. This
   * will occur if the source of the drag initiated a link for dragging that
   * it itself cannot access. This prevents a source document from tricking
   * the user into a dragging a chrome url for example.
   *
   * aName is filled in with the link title if it exists, or an empty string
   * otherwise.
   */
  AString dropLink(in nsIDOMDragEvent aEvent, out AString aName);
};

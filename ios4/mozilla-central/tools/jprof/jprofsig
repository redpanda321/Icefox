#!/bin/sh
#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is Mozilla Communicator.
#
# The Initial Developer of the Original Code is
# Chris McAfee.
# Portions created by the Initial Developer are Copyright (C) 2001
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Chris McAfee <mcafee@netscape.com>
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

#
# Find Mozilla PID and send it a signal, to be used
# with the jprof tool.
#

jpsignal_usage() {
  echo "Usage: jprofsig [start|stop]"
  exit 1
}

if [ $# != 1 ]; then
  echo "Wrong number of arguments."
  jpsignal_usage
fi

jpsignal_arg="$1"

# Find & print mozilla PID
tmpmoz=`ps aux | grep mozilla-bin | head -1 | awk '{ print $2 }'`
echo "Mozilla PID = $tmpmoz"

# See how we were called.
case "$jpsignal_arg" in
  start)
    if [ "$JP_REALTIME" = 1 ]; then
      kill -ALRM $tmpmoz
    else
      # Normal, non-realtime mode.
      kill -PROF $tmpmoz
    fi
    ;;
  stop)
    kill -USR1 $tmpmoz
    ;;
  *)
    jpsignal_usage
    exit 1
esac

exit 0

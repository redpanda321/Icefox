#! gmake
#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Kipp E.B. Hickman.
# Portions created by the Initial Developer are Copyright (C) 1999
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

CXX = c++
OPTIMIZER = -g
CXXFLAGS = $(OPTIMIZER) -Wall -Wp,-MD,.deps-$<
CXXF = $(CXX) $(CXXFLAGS)

MKSHLIB = $(CXX) -shared

# Stuff to build the leaky executable
LEAKY_CPPSRCS =	   \
	bfd.cpp    \
	coff.cpp   \
	dict.cpp   \
	elf.cpp	   \
	leaky.cpp  \
	strset.cpp \
	$(NULL)
LEAKY_OBJECTS = $(LEAKY_CPPSRCS:.cpp=.o)
LEAKY_LIBS = -lbfd -liberty

# Stuff to build the library used to wrap malloc
LIBMALLOC_CPPSRCS = libmalloc.cpp
LIBMALLOC_OBJECTS = $(LIBMALLOC_CPPSRCS:.cpp=.o)
LIBMALLOC = libleaky.so

# Stuff to build test programs
LIBPRELOAD = libpreload.so

TARGETS = leaky $(LIBMALLOC) TestLeaky TestPreload $(LIBPRELOAD) ShowLibs

.SUFFIXES: .cpp

default all: $(TARGETS)

clean:
	rm -f core malloc-log malloc-map *.o .deps*

clobber: clean
	rm -f $(TARGETS)

.cpp.o:
	$(CXXF) -c $<

leaky: $(LEAKY_OBJECTS)
	$(CXXF) -o $@ $(LEAKY_OBJECTS) $(LEAKY_LIBS)

$(LIBMALLOC): $(LIBMALLOC_OBJECTS)
	rm -f $@
	$(MKSHLIB) -o $@ $(LIBMALLOC_OBJECTS)

TestLeaky: TestLeaky.cpp
	$(CXXF) -o $@ TestLeaky.cpp

TestPreload: TestPreload.cpp
	$(CXXF) -o $@ TestPreload.cpp

$(LIBPRELOAD): LibPreload.o
	$(MKSHLIB) -o $@ LibPreload.o

ShowLibs: ShowLibs.cpp
	$(CXXF) -o $@ ShowLibs.cpp

-include .deps-*

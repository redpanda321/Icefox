#! gmake
#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org Code.
#
# The Initial Developer of the Original Code is
# Kipp E.B. Hickman.
# Portions created by the Initial Developer are Copyright (C) 2001
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

SIMPLE_PROGRAMS = TestLeaky TestPreload ShowLibs

PROGRAM = leaky

CPPSRCS = \
	bfd.cpp    \
	coff.cpp   \
	dict.cpp   \
	elf.cpp	   \
	leaky.cpp  \
	strset.cpp \
	$(NULL)


LIBS = \
	-lbfd \
	-liberty \
	$(NULL)

RESOURCES =	       \
	leaky.css      \
	leaky.js       \
	open.gif       \
	open-over.gif  \
	close.gif      \
	close-over.gif \
	$(NULL)

RESOURCES := $(addprefix $(srcdir)/, $(RESOURCES))

# Stuff to build the library used to wrap malloc
LIBMALLOC_CPPSRCS = libmalloc.cpp
LIBMALLOC_OBJECTS = $(LIBMALLOC_CPPSRCS:.cpp=.o)
LIBMALLOC = libleaky.so

# Stuff to build test programs
LIBPRELOAD_CPPSRCS = LibPreload.cpp
LIBPRELOAD_OBJECTS = $(LIBPRELOAD_CPPSRCS:.cpp=.o)
LIBPRELOAD = libpreload.so

# include $(topsrcdir)/config/config.mk

OTHER_LIBRARIES = $(LIBMALLOC) $(LIBPRELOAD)
TARGETS := $(PROGRAM) $(SIMPLE_PROGRAMS) $(OTHER_LIBRARIES)

include $(topsrcdir)/config/rules.mk

# Make sure all depends on files that rules.mk doesn't know about.
all:: $(OTHER_LIBRARIES)

# Make sure install depends on files that rules.mk doesn't know about.
libs:: $(OTHER_LIBRARIES)

# Make sure libs depends on files that rules.mk doesn't know about.
libs:: $(OTHER_LIBRARIES)

clobber::
	rm -f $(LIBMALLOC_OBJECTS) $(LIBPRELOAD_OBJECTS)
	rm -f $(LIBMALLOC) $(LIBPRELOAD)
	rm -f $(SIMPLE_PROGRAMS:=.o)

clean::
	rm -f $(LIBMALLOC_OBJECTS) $(LIBPRELOAD_OBJECTS)

$(LIBMALLOC): $(LIBMALLOC_OBJECTS)
	rm -f $@
	$(MKSHLIB) $(LIBMALLOC_OBJECTS)

$(LIBPRELOAD): $(LIBPRELOAD_OBJECTS)
	$(MKSHLIB) $(LIBPRELOAD_OBJECTS)

test:
	@echo LIBMALLOC = $(LIBMALLOC)
	@echo LIBPRELOAD = $(LIBPRELOAD)
	@echo TARGETS = $(TARGETS)

libs:: $(OTHER_LIBRARIES) $(RESOURCES)
	$(INSTALL) -m 555 $(OTHER_LIBRARIES) $(DIST)/lib
	$(INSTALL) $(RESOURCES) $(DIST)/bin/res/leaky
